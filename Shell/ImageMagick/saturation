#!/bin/bash
#
# Developed by Fred Weinhaus 10/08/2007 .......... revised 12/29/2008
#
# USAGE: saturation [value] infile outfile
# USAGE: saturation [-h or -help]
#
# OPTIONS:
#
# value                          saturation gain factor (float); 
#                                sat>=0.0; default=1.0 (no change); 
#                                must specify one digit after decimal
# -h or -help                    get help
#
###
#
# NAME: SATURATION 
# 
# PURPOSE: To change the color saturation in an image. 
# 
# DESCRIPTION: SATURATION changes the color saturation in an 
# image in a linear manner. The image is first converted to 
# HSL colorspace and then the saturation value is used as a 
# multiplier for each value in the S channel. Then the modified 
# saturation channel is recombined with the H and L channels 
# and the image is converted to RGB colorspace as output.
# 
# Arguments: 
#
# -h or -help    ---  displays help information. 
# 
# value --- value is the saturation factor. It is a multiplier for 
# the saturation channel in an image. Values greater than 1.0 will 
# increase the saturation of the image and values less than 1.0 will 
# decrease the saturation of the image. The default is 1.0 or no gain. 
# Note: must specify the decimal point and one digit following it.
#
# CAVEAT: No guarantee that this script will work on all platforms, 
# nor that trapping of inconsistent parameters is complete and 
# foolproof. Use At Your Own Risk. 
# 
######
#
# set default values; 
value=1.0

# set directory for temporary files
dir="."    # suggestions are dir="." or dir="/tmp"
#
#
# set up functions to report Usage and Usage with Description
PROGNAME=`type $0 | awk '{print $3}'`  # search for executable on path
PROGDIR=`dirname $PROGNAME`            # extract directory of program
PROGNAME=`basename $PROGNAME`          # base name of program
usage1() 
	{
	echo >&2 ""
	echo >&2 "$PROGNAME:" "$@"
	sed >&2 -n '/^###/q;  /^#/!q;  s/^#//;  s/^ //;  4,$p' "$PROGDIR/$PROGNAME"
	}
usage2() 
	{
	echo >&2 ""
	echo >&2 "$PROGNAME:" "$@"
	sed >&2 -n '/^######/q;  /^#/!q;  s/^#*//;  s/^ //;  4,$p' "$PROGDIR/$PROGNAME"
	}
#
# function to report error messages
errMsg()
	{
	echo ""
	echo $1
	echo ""
	usage1
	exit 1
	}
#
# function to test for minus at start of value of second part of option 1 or 2
checkMinus()
	{
	test=`echo "$1" | grep -c '^-.*$'`   # returns 1 if match; 0 otherwise
    [ $test -eq 1 ] && errMsg "$errorMsg"
	}
#
#
# test for correct number of arguments and get values
if [ $# -eq 0 ]
	then
	# help information
	echo ""
	usage2
	exit 0
elif [ $# -gt 3 ]
	then
	errMsg "--- TOO MANY ARGUMENTS WERE PROVIDED ---"
else
	while [ $# -gt 0 ]
		do
		# get parameters
		case "$1" in
	  -h|-help)    # help information
				   echo ""
				   usage2
				   ;;
 [0-9]*.[0-9]*)    # value
	               value=$1
				   ;;
			 -)    # STDIN and end of arguments
				   break
				   ;;
			-*)    # any other - argument
				   errMsg "--- UNKNOWN OPTION ---"
				   ;;
			*)     # end of arguments
				   break
				   ;;
		esac
		shift   # next option
	done
	#
	# get infile and outfile
	infile=$1
	outfile=$2
fi


# test that infile provided
[ "$infile" = "" ] && errMsg "NO INPUT FILE SPECIFIED"

# test that outfile provided
[ "$outfile" = "" ] && errMsg "NO OUTPUT FILE SPECIFIED"


tmpA="$dir/saturation_$$.mpc"
tmpB="$dir/saturation_$$.cache"
tmp0="$dir/saturation_0_$$.png"
tmp1="$dir/saturation_1_$$.png"
tmp2="$dir/saturation_2_$$.png"

trap "rm -f $tmpA $tmpB $tmp0 $tmp1 $tmp2; exit 0" 0
trap "rm -f $tmpA $tmpB $tmp0 $tmp1 $tmp2; exit 1" 1 2 3 15

	if convert -quiet -regard-warnings "$infile" +repage "$tmpA"
		then
		convert $tmpA -colorspace HSL -channel R -separate $tmp0
		convert $tmpA -colorspace HSL -channel G -separate $tmp1
		convert $tmpA -colorspace HSL -channel B -separate $tmp2
		convert $tmp0 -colorspace HSL \
			$tmp0 -compose CopyRed -composite \
			\( $tmp1 -evaluate multiply $value \) -compose CopyGreen -composite \
			$tmp2 -compose CopyBlue -composite \
			-colorspace RGB $outfile
		else
			errMsg "--- FILE $infile DOES NOT EXIST OR IS NOT AN ORDINARY FILE, NOT READABLE OR HAS ZERO SIZE ---"
	fi
exit 0

